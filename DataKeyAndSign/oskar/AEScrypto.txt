 IDENTIFICATION DIVISION.
 PROGRAM-ID.    SKANSO9.
 ENVIRONMENT DIVISION.
 CONFIGURATION SECTION.
 SOURCE-COMPUTER. IBM-370.
 OBJECT-COMPUTER. IBM-370.
 SPECIAL-NAMES. DECIMAL-POINT IS COMMA.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
 DATA DIVISION.
 FILE SECTION.
 WORKING-STORAGE SECTION.
 01  SKADPKB-AREA.
     COPY SKADPKB.
 01  SKADXEA-AREA.
     COPY SKADXEA.
 01  SKADSAD-AREA.
     COPY SKADSAD.
 01  SKADSAE-AREA.
     COPY SKADSAE.
 01  SKADSYG-AREA.
     COPY SKADSYG.
 01  SKAD900-AREA.
     COPY SKAD900.
 01 PRIV-KEY-AREA.
    05 PRIV-KEY-TOKEN-LENGTH     PIC S9(08) COMP.
    05 PRIV-KEY-TOKEN            PIC X(3500).
 01  LNK-BIN-STRING              PIC X(99999).
 01  LNK-BIN-LENGTH              PIC 9(8)  BINARY.
 01  LNK-B64-STRING              PIC X(99999).
 01  LNK-B64-LENGTH              PIC 9(8)  BINARY.

 LINKAGE SECTION.
 PROCEDURE DIVISION.
 A-HUVUDRUTIN SECTION.
     PERFORM C-FIX
     GOBACK
     .
 C-FIX SECTION.
*

     INITIALIZE ICSF-REASON-CODE     IN SKADPKB-AREA
                ICSF-RETURN-CODE     IN SKADPKB-AREA
                EXIT-LTH             IN SKADPKB-AREA
                EXIT-DATA            IN SKADPKB-AREA
     MOVE ALL X'00'
       TO KEY-VALUE-STRUCTURE        IN SKADPKB-AREA
     STRING X'080001010003000000'             DELIMITED BY SIZE
            X'EC3AFDF699A1E63AB3B98E613057'   DELIMITED BY SIZE
            X'A638AA2CE0A0AFFEB36DF09D9F86D9' DELIMITED BY SIZE
            X'E9A03CAEEF4EE82092BFABADDFC1CC' DELIMITED BY SIZE
            X'F7188465EBFFC54FC0BBCFCF288EAC' DELIMITED BY SIZE
            X'FACCB1CE7091D1088F05152C142F30' DELIMITED BY SIZE
            X'301CF1AE288D6EA290AFDDD8B16251' DELIMITED BY SIZE
            X'7B5CCC3144BE94EC024ACC2AEB12E4' DELIMITED BY SIZE
            X'B291A3C77166288EDD299BA927A347' DELIMITED BY SIZE
            X'328F327B548F7587B1A784B41CF4AF' DELIMITED BY SIZE
            X'92828C8564CA8BB7D0F18B2804C823' DELIMITED BY SIZE
            X'9957D4929D3A453FC6E7A3C7D3E9DD' DELIMITED BY SIZE
            X'2E7571C1F1DCD89902FC35E96A7014' DELIMITED BY SIZE
            X'76F5F3EB01907A7B76C4EE80995A72' DELIMITED BY SIZE
            X'FB2007520CAF62E90AC11213E8BF96' DELIMITED BY SIZE
            X'872A010185B7A02B4D7DB90D2B9C45' DELIMITED BY SIZE
            X'7AA71DE1B851AE3222D37646EA3BB5' DELIMITED BY SIZE
            X'67B3DBC677CE28711C536A18071FE8' DELIMITED BY SIZE
            X'BE9F'                           DELIMITED BY SIZE
            X'010001'                         DELIMITED BY SIZE
       INTO KEY-VALUE-STRUCTURE      IN SKADPKB-AREA
     END-STRING
     MOVE +268
       TO KEY-VALUE-STRUCTURE-LENGTH    IN SKADPKB-AREA
*
     MOVE +1
       TO RULE-ARRAY-COUNT           IN SKADPKB-AREA
     MOVE 'RSA-PUBL'
       TO RULE-ARRAY                 IN SKADPKB-AREA
*
     MOVE +0
       TO PRIVATE-KEY-NAME-LENGTH    IN SKADPKB-AREA
     MOVE ALL X'00'
       TO PRIVATE-KEY-NAME           IN SKADPKB-AREA
     MOVE +0
       TO KEY-DERIVATION-DATA-LENGTH IN SKADPKB-AREA
     MOVE SPACE
       TO KEY-DERIVATION-DATA        IN SKADPKB-AREA
     MOVE +0
       TO RESERVED3-LENGTH           IN SKADPKB-AREA
     MOVE SPACE
       TO RESERVED3                  IN SKADPKB-AREA
     MOVE +0
       TO RESERVED4-LENGTH           IN SKADPKB-AREA
     MOVE SPACE
       TO RESERVED4                  IN SKADPKB-AREA
     MOVE +0
       TO RESERVED5-LENGTH           IN SKADPKB-AREA
     MOVE SPACE
       TO RESERVED5                  IN SKADPKB-AREA
     MOVE 3500
       TO KEY-TOKEN-LENGTH           IN SKADPKB-AREA
     MOVE ALL X'00'
       TO KEY-TOKEN                  IN SKADPKB-AREA

     CALL 'SKAMPKB' USING SKADPKB-AREA
*
     IF ICSF-RETURN-CODE             IN SKADPKB-AREA = +0 AND
        ICSF-REASON-CODE             IN SKADPKB-AREA = +0
        CONTINUE
     ELSE
        DISPLAY 'FEL PKB'
        DISPLAY  ICSF-RETURN-CODE    IN SKADPKB-AREA
        DISPLAY  ICSF-REASON-CODE    IN SKADPKB-AREA
        GO TO SECTION-END
     END-IF
*
     INITIALIZE ICSF-REASON-CODE     IN SKADSYG-AREA
                ICSF-RETURN-CODE     IN SKADSYG-AREA
                EXIT-LTH             IN SKADSYG-AREA
                EXIT-DATA            IN SKADSYG-AREA
     MOVE +5
       TO RULE-ARRAY-COUNT           IN SKADSYG-AREA
     MOVE 'AES     PKCSOAEPKEYLN32 OP      SHA-256'
       TO RULE-ARRAY                 IN SKADSYG-AREA
     MOVE SPACE
       TO KEY-ENCRYPTING-KEY-ID      IN SKADSYG-AREA
     MOVE KEY-TOKEN-LENGTH           IN SKADPKB-AREA
       TO RSA-PUBLIC-KEY-ID-L        IN SKADSYG-AREA
     MOVE KEY-TOKEN                  IN SKADPKB-AREA
       TO RSA-PUBLIC-KEY-ID          IN SKADSYG-AREA
     MOVE +128
       TO LOCAL-ENCIPH-KEY-TOKEN-L   IN SKADSYG-AREA
     MOVE ALL X'00'
       TO LOCAL-ENCIPH-KEY-TOKEN     IN SKADSYG-AREA
     MOVE +512
       TO RSA-ENCIPH-KEY-LENGTH      IN SKADSYG-AREA
     MOVE ALL X'00'
       TO RSA-ENCIPH-KEY             IN SKADSYG-AREA

     CALL 'SKAMSYG' USING SKADSYG-AREA
*
     IF ICSF-RETURN-CODE IN SKADSYG-AREA = +0 AND
        ICSF-REASON-CODE IN SKADSYG-AREA = +0
        DISPLAY 'SYG OK'
     ELSE
        DISPLAY 'SYG FEL'
        DISPLAY ICSF-RETURN-CODE IN SKADSYG-AREA
        DISPLAY ICSF-REASON-CODE IN SKADSYG-AREA
     END-IF
     INITIALIZE ICSF-REASON-CODE     IN SKADXEA-AREA
                ICSF-RETURN-CODE     IN SKADXEA-AREA
                EXIT-LTH             IN SKADXEA-AREA
                EXIT-DATA            IN SKADXEA-AREA
     MOVE 'YOU WILL WIN'
       TO SOURCE-TEXT                IN SKADXEA-AREA
     MOVE +12
       TO SOURCE-LENGTH              IN SKADXEA-AREA
     MOVE ALL X'00'
       TO CODE-TABLE                 IN SKADXEA-AREA
     CALL 'SKAMXEA' USING SKADXEA-AREA
     IF ICSF-RETURN-CODE             IN SKADXEA-AREA = +0 AND
        ICSF-REASON-CODE             IN SKADXEA-AREA = +0
        DISPLAY 'XEA OK'
     ELSE
        DISPLAY 'XEA EJ OK'
        DISPLAY ICSF-RETURN-CODE        IN SKADXEA-AREA
        DISPLAY ICSF-REASON-CODE        IN SKADXEA-AREA
     END-IF
*
     INITIALIZE ICSF-REASON-CODE     IN SKADSAE-AREA
                ICSF-RETURN-CODE     IN SKADSAE-AREA
                EXIT-LTH             IN SKADSAE-AREA
                EXIT-DATA            IN SKADSAE-AREA
     MOVE +3
       TO RULE-ARRAY-COUNT           IN SKADSAE-AREA
     MOVE 'AES     PKCS-PADKEYIDENT'
       TO RULE-ARRAY                 IN SKADSAE-AREA
     MOVE LOCAL-ENCIPH-KEY-TOKEN-L   IN SKADSYG-AREA
       TO KEY-IDENTIFIER-LENGTH      IN SKADSAE-AREA
     MOVE LOCAL-ENCIPH-KEY-TOKEN     IN SKADSYG-AREA
       TO KEY-IDENTIFIER             IN SKADSAE-AREA
     MOVE +0
       TO KEY-PARMS-LENGTH           IN SKADSAE-AREA
     MOVE X'00'
       TO KEY-PARMS                  IN SKADSAE-AREA
     MOVE +16
       TO BLOCK-SIZE                 IN SKADSAE-AREA
     MOVE +16
       TO INIT-VECTOR-LENGTH         IN SKADSAE-AREA
     MOVE ALL X'00'
       TO INIT-VECTOR                IN SKADSAE-AREA
     MOVE +192
       TO CHAIN-DATA-LENGTH          IN SKADSAE-AREA
     MOVE ALL X'00'
       TO CHAIN-DATA                 IN SKADSAE-AREA
     MOVE 12
       TO CLEAR-TEXT-LENGTH          IN SKADSAE-AREA
     MOVE TARGET-TEXT                IN SKADXEA-AREA
       TO CLEAR-TEXT                 IN SKADSAE-AREA
     MOVE +8000
       TO CIPHER-TEXT-LENGTH         IN SKADSAE-AREA
     MOVE ALL X'00'
       TO CIPHER-TEXT                IN SKADSAE-AREA
     MOVE +0
       TO OPTIONAL-DATA-LENGTH       IN SKADSAE-AREA
     MOVE ALL X'00'
       TO OPTIONAL-DATA              IN SKADSAE-AREA

     CALL 'SKAMSAE' USING SKADSAE-AREA
     IF ICSF-RETURN-CODE IN SKADSAE-AREA = +0 AND
        ICSF-REASON-CODE IN SKADSAE-AREA = +0
        DISPLAY 'SAE OK'
     ELSE
        DISPLAY 'SAE FEL'
        DISPLAY ICSF-RETURN-CODE IN SKADSAE-AREA
        DISPLAY ICSF-REASON-CODE IN SKADSAE-AREA
     END-IF
     INITIALIZE ICSF-REASON-CODE     IN SKADSAD-AREA
                ICSF-RETURN-CODE     IN SKADSAD-AREA
                EXIT-LTH             IN SKADSAD-AREA
                EXIT-DATA            IN SKADSAD-AREA
                CIPHER-TEXT-LENGTH   IN SKADSAD-AREA
                CIPHER-TEXT          IN SKADSAD-AREA
                CLEAR-TEXT-LENGTH    IN SKADSAD-AREA
                CLEAR-TEXT           IN SKADSAD-AREA

     MOVE 3
       TO RULE-ARRAY-COUNT           IN SKADSAD-AREA
     MOVE 'AES     PKCS-PADKEYIDENT'
       TO RULE-ARRAY                 IN SKADSAD-AREA
     MOVE LOCAL-ENCIPH-KEY-TOKEN-L   IN SKADSYG-AREA
       TO KEY-IDENTIFIER-LENGTH      IN SKADSAD-AREA
     MOVE LOCAL-ENCIPH-KEY-TOKEN     IN SKADSYG-AREA
       TO KEY-IDENTIFIER             IN SKADSAD-AREA
     MOVE +0
       TO KEY-PARMS-LENGTH           IN SKADSAD-AREA
     MOVE ALL X'00'
       TO KEY-PARMS                  IN SKADSAD-AREA
     MOVE +16
       TO BLOCK-SIZE                 IN SKADSAD-AREA
     MOVE +16
       TO INIT-VECTOR-LENGTH         IN SKADSAD-AREA
     MOVE ALL X'00'
       TO INIT-VECTOR                IN SKADSAD-AREA
     MOVE +4000
       TO CHAIN-DATA-LENGTH          IN SKADSAD-AREA
     MOVE ALL X'00'
       TO CHAIN-DATA                 IN SKADSAD-AREA
     MOVE +128
       TO CLEAR-TEXT-LENGTH          IN SKADSAD-AREA
     MOVE ALL X'00'
       TO CLEAR-TEXT                 IN SKADSAD-AREA
     MOVE CIPHER-TEXT-LENGTH         IN SKADSAE-AREA
       TO CIPHER-TEXT-LENGTH         IN SKADSAD-AREA
     MOVE CIPHER-TEXT                IN SKADSAE-AREA
       TO CIPHER-TEXT                IN SKADSAD-AREA
     MOVE +0
       TO OPTIONAL-DATA-LENGTH       IN SKADSAD-AREA
     MOVE ALL X'00'
       TO OPTIONAL-DATA              IN SKADSAD-AREA

     CALL 'SKAMSAD' USING SKADSAD-AREA

     IF ICSF-RETURN-CODE IN SKADSAD-AREA = +0 AND
        ICSF-REASON-CODE IN SKADSAD-AREA = +0
        DISPLAY  CLEAR-TEXT IN SKADSAD-AREA
                (1:CLEAR-TEXT-LENGTH IN SKADSAD-AREA)
     ELSE
        DISPLAY 'SAD FEL'
        DISPLAY ICSF-RETURN-CODE IN SKADSAD-AREA
        DISPLAY ICSF-REASON-CODE IN SKADSAD-AREA
     END-IF
     MOVE CIPHER-TEXT IN SKADSAE-AREA
         (1:CIPHER-TEXT-LENGTH IN SKADSAE-AREA)
       TO LNK-BIN-STRING
     MOVE CIPHER-TEXT-LENGTH IN SKADSAE-AREA
       TO LNK-BIN-LENGTH
     CALL 'SKAM061' USING LNK-BIN-STRING
                          LNK-BIN-LENGTH
                          LNK-B64-STRING
                          LNK-B64-LENGTH
     DISPLAY 'TEXT'
     DISPLAY LNK-B64-STRING (1:LNK-B64-LENGTH)
*
     MOVE RSA-ENCIPH-KEY             IN SKADSYG-AREA
         (1:RSA-ENCIPH-KEY-LENGTH    IN SKADSYG-AREA)
       TO LNK-BIN-STRING
     MOVE RSA-ENCIPH-KEY-LENGTH      IN SKADSYG-AREA
       TO LNK-BIN-LENGTH
     CALL 'SKAM061' USING LNK-BIN-STRING
                          LNK-BIN-LENGTH
                          LNK-B64-STRING
                          LNK-B64-LENGTH
     DISPLAY 'KRYPTERINGSNYCKEL UNDER RSA'
     DISPLAY LNK-B64-STRING (1:LNK-B64-LENGTH)
*
     MOVE LOCAL-ENCIPH-KEY-TOKEN     IN SKADSYG-AREA
         (1:LOCAL-ENCIPH-KEY-TOKEN-L IN SKADSYG-AREA)
       TO LNK-BIN-STRING
     MOVE LOCAL-ENCIPH-KEY-TOKEN-L   IN SKADSYG-AREA
       TO LNK-BIN-LENGTH
     CALL 'SKAM061' USING LNK-BIN-STRING
                          LNK-BIN-LENGTH
                          LNK-B64-STRING
                          LNK-B64-LENGTH
     DISPLAY 'KRYPTERINGSNYCKEL'
     DISPLAY LNK-B64-STRING (1:LNK-B64-LENGTH)
     .
 SECTION-END.
     EXIT.
